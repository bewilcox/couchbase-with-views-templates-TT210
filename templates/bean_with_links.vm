##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key and not in selected Links    
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------------
## Link fields = fields not in Primary Key and used as FK in selected Links    
#set( $linkFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------------

##--------------------------------------------------------------------------------------------------------
/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

package ${target.javaPackageFromFolder($SRC)};

import java.io.Serializable;

#foreach( $import in $entity.imports )
import $import;
#end

#set($showImportslinkType = 0)
#foreach( $link in $entity.selectedLinks )
#if($link.isCardinalityOneToMany() || $link.isCardinalityManyToMany())
#if($link.isFetchEAGER())
#set($showImportslinkType = 1)
#end
#end
#end
#if($showImportslinkType == 1)
import java.util.List;
#end
/**
 * POJO class for "${entity.databaseTable}" documents.
 *
 * @author Telosys Tools Generator
 *
 */
public class $entity.name implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // DOCUMENT PRIMARY KEY 
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
    private $field.formatedType(4) $field.formatedName(1) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end


    //----------------------------------------------------------------------
    // DOCUMENT DATA FIELDS 
    //----------------------------------------------------------------------    
#foreach( $field in $dataFields )
    private $field.formatedType(4) $field.formatedName(1) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end


    //----------------------------------------------------------------------
    // DOCUMENT LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
#foreach( $link in $entity.selectedLinks )
#if($link.isCardinalityManyToOne() || $link.isCardinalityOneToOne())
#if($link.isFetchEAGER())
    // Eager like fetching, the document store all the datas of the link.
#set($linkType = $link.formatedType(1))
#else
    // Lazy like fetching, the document store the reference id of the link.
#set($linkType = "String") ## hard value for the moment : how to retrieve the type of the associated field for this link ?
#end
    private $linkType $link.formatedName(0);
#elseif($link.isCardinalityOneToMany() || $link.isCardinalityManyToMany())
#if($link.isFetchEAGER())
    // Eager like fetching, the document store all the datas of the link.
#set($linkType = $link.formatedType(1))
    private $linkType $link.formatedName(0);
#else
    // Lazy like fetching for $link.targetEntity, so no link in the document. Use query.
#end
#end
#end

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ${entity.name}()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
#if ( $field.setter )    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name ;
    }
#end
#if ( $field.getter )    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end
#end

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $dataFields )
## #if ( $field.isUsedInLinkJoinColumn( $entity.selectedLinks ) != true )
#if ( $field.databaseName )
#end
#if ( $field.setter )    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name;
    }
#end
#if ( $field.getter )    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end

## #end  
#end  

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
#foreach( $link in $entity.selectedLinks )
#set($showAccessors = 0)
#if($link.isCardinalityManyToOne() || $link.isCardinalityOneToOne())
#set($showAccessors = 1)
#if($link.isFetchEAGER())
    // Eager like fetching, the document store all the datas of the link.
#set($linkType = $link.formatedType(1))
#else
    // Lazy like fetching, the document store the reference id of the link.
#set($linkType = "String") ## hard value for the moment : how to retrieve the type of the associated field for this link ?
#end
#elseif($link.isCardinalityOneToMany() || $link.isCardinalityManyToMany())
#if($link.isFetchEAGER())
#set($showAccessors = 1)
    // Eager like fetching, the document store all the datas of the link.
#set($linkType = $link.formatedType(1))
#else
#set($showAccessors = 0)
    // Lazy like fetching for $link.targetEntity, so no link in the document. Use query.
#end
#end
#if($showAccessors == 1)
#if ( $link.setter )    public void ${link.setter} ( $linkType ${link.javaName}  )
    {
        this.${link.javaName} = ${link.javaName};
    }
#end
#if ( $link.getter )    public $linkType ${link.getter} ()
    {
        return this.${link.javaName};
    }
#end
#end

#end  

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------

#set( $dataFields = $entity.getAttributesByCriteria($const.NOT_KEY,$const.NOT_TEXT, $const.NOT_IN_SELECTED_LINKS) )
    public String toString()
    {
		StringBuffer sb = new StringBuffer(); 
#foreach( $field in $entity.keyAttributes )
    	sb.append("|");
		sb.append(${field.formatedName(0)});
#end
#foreach( $link in $entity.selectedLinks )
#set($includeFieldIntoToString = 0)
#if($link.isCardinalityManyToOne() || $link.isCardinalityOneToOne())
#set($includeFieldIntoToString = 1)
#elseif($link.isCardinalityOneToMany() || $link.isCardinalityManyToMany())
#if($link.isFetchEAGER())
#set($includeFieldIntoToString = 1)
#end
#end
#if($includeFieldIntoToString == 1)
		sb.append("|");
		sb.append(${link.formatedName(0)});
#end
#end  
#foreach( $field in $dataFields )
		sb.append("|");
		sb.append(${field.formatedName(0)});
#end  
		return sb.toString();
    }

}
