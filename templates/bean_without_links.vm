/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder($SRC)};

import java.io.Serializable;

#foreach( $import in $entity.imports )
import $import;
#end

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
##--------------------------------------------------------------------------------------------------------
## Data fields list ( list of fields used as bean property with getter/setter )
## Data fields = fields not in Primary Key    
## #set( $dataFields = $entity.nonKeyAttributes )
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )
##--------------------------------------------------------------------------------------------------------

/**
 * POJO class for "${entity.databaseTable}" document.
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
public class $entity.name implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // DOCUMENT PRIMARY KEY
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
    private $field.formatedType(10) $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end

    //----------------------------------------------------------------------
    // DOCUMENT DATA FIELDS 
    //----------------------------------------------------------------------    
#foreach( $field in $dataFields )
    private $field.formatedType(10) $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ${entity.name}() {
    }

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
#if ( $field.setter )    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name ;
    }
#end
#if ( $field.getter )    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end
#end

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $dataFields )
#if ( $field.databaseName )    //--- DOCUMENT MAPPING : $field.databaseName ( $field.databaseType ) 
#end
#if ( $field.setter )    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name;
    }
#end
#if ( $field.getter )    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end

#end  

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {    
#set( $attributes = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_TEXT ) )
## The "key" is used only if composite key
$entity.toStringMethodCodeLines(8) 
#foreach( $field in $entity.getAttributesByCriteria( $const.TEXT ) )
		// $field.name is not in toString because it's a "long text" field
#end  
    }

}
